1. In todays's digital world, managing ticket bookings manually can lead to long queues, delays, and operational inefficiencies. To solve this, your development team has been assigned to build a web-based E-ticketing system that simplifies the process of booking tickets for movies, concerts, and public events. [10Marks]

Based on this information, answer the following:
a. write a short summary (abstract) of what this project is about.
b. what are the main things the system should do? (Functional Requirments)
c. what are the qualities the system should have? (Non-Functional Requirments)
d. who all use the system? List all types of users.
e. what are the main parts (modules) of the system?
f. Draw a simple use case diagram showing how users interact with th system.

2. Clone the online ticketing system repo to your eclipse software from the URL below and execute the project by changing the required changes in POM.xml and make it a successful build. [20 Marks]

https://github.com/ssvkotamraju/E-ticketing

3. Working with the version control(GitHub, GitLab, etc.) [30 Marks]

you're working as a junior developer on a railway ticket booking portal. Add new features, collaborate with teammates (via simulated patches), along with basic commands like init, add, commit, reset, restore, clean up unused branches, merge, patch, apply, prune commands and push the project to your git hub.

4. Run the project with docker [30 Marks]
i. create a Dockerfile and build a Docker image named OTS to push it to DockerHUB.
ii. Run the image in a container and expose port 8080. check if the app runs at http://localhost:8080.

iii. create a docker-compose.yml file so the app can work with other services like a database in the future.






a. Project Summary (Abstract)

The project aims to develop a web-based E-ticketing system that enables users to book tickets for various events such as movies, concerts, and public events seamlessly. The system will automate and simplify the entire ticket booking process, replacing manual methods that lead to inefficiencies such as long queues, delays, and human errors. By providing a user-friendly platform, the system will enable customers to browse available events, choose their preferred seats or tickets, make payments, and receive e-tickets for easy entry. This solution will enhance user experience, streamline event management, and reduce operational costs for organizers.

b. Functional Requirements

User Registration & Authentication:

Users should be able to create an account, login, and manage their profile securely.

Browse Events:

Users should be able to search and view upcoming movies, concerts, or public events based on date, location, category, etc.

Event Selection:

Users can select the event, view available seats (for events like movies or concerts), and pick their preferred seats.

Ticket Booking:

Users can choose the number of tickets, enter required details, and confirm their booking.

Payment Integration:

Secure online payment options (credit/debit cards, e-wallets, etc.) for ticket purchase.

E-Ticket Generation:

Upon successful booking and payment, users will receive a digital ticket (QR code or barcode) for event entry.

Booking History:

Users can view and track their past bookings, including details of events and payment receipts.

Notifications and Alerts:

The system should send booking confirmations, reminders, and updates to users.

Admin Panel:

Admins can manage events, view bookings, and process refunds or cancellations.

Ticket Cancellation & Refund:

Users can cancel their tickets and receive a refund, subject to event policies.

c. Non-Functional Requirements

Usability:

The system should be easy to use with an intuitive, responsive interface accessible from various devices (desktop, tablet, mobile).

Scalability:

The system should be capable of handling a large number of simultaneous users, especially during peak booking times (e.g., for popular events).

Performance:

The application should have fast response times, with minimal loading delays even under heavy traffic.

Security:

Data protection and user privacy are paramount. The system should implement secure protocols (e.g., SSL) for payment processing and secure user authentication.

Availability:

The system should have high availability, ensuring users can book tickets at any time. Downtime should be minimized, and scheduled maintenance should be communicated in advance.

Reliability:

The system should perform its tasks consistently without errors or failures, especially when dealing with payments or ticket generation.

Backup and Data Recovery:

The system should back up data regularly and have a disaster recovery plan to restore services if something goes wrong.

Interoperability:

The system should integrate with third-party services for payment processing, email notifications, etc.

d. Types of Users

Customer (End User):

Individuals who book tickets for movies, concerts, or public events.

Event Organizer (Admin):

Individuals or organizations responsible for creating and managing events, handling bookings, and processing refunds.

System Administrator:

Technical staff who manage the system infrastructure, handle user queries, ensure data security, and maintain overall system health.

e. Main Parts (Modules) of the System

User Interface (UI):

The front-end platform for customers and admins to interact with the system (website or mobile app).

Event Management Module:

Manages the creation and details of events, such as dates, locations, available seats, and event categories.

Booking & Ticketing Module:

Allows users to select, book, and pay for tickets. Generates e-tickets upon successful booking.

Payment Gateway Integration:

Handles payment processing, ensuring secure financial transactions.

User Account Management:

Manages user registration, login, profile, and booking history.

Notification System:

Sends booking confirmations, reminders, and event updates via email or SMS.

Admin Panel:

Allows administrators to manage events, view bookings, and process cancellations or refunds.

Security & Authentication:

Ensures that the system is secure, including user authentication, encryption, and data protection.

f. Use Case Diagram

Below is a simplified version of how the different users interact with the system:

             +----------------------------+
             |   E-Ticketing System       |
             +----------------------------+
                  ^             ^
               ____|_____________|____
              /                       \
   +------------+                  +------------+
   |  Customer  |                  |   Admin    |
   +------------+                  +------------+
        |                               |
   +----------+                      +----------+
   |  Browse  |                      |  Manage  |
   |   Events |<------------------->|  Events  |
   +----------+                      +----------+
        |                               |
   +------------+                  +------------+
   |  Select    |                  |  View All  |
   |  Tickets   |<----------------->|  Bookings  |
   +------------+                  +------------+
        |                               |
   +------------+                  +------------+
   |   Pay for   |                  |  Process   |
   |  Tickets   |                  |  Refunds   |
   +------------+                  +------------+
        |
   +------------+
   | Generate   |
   | E-Ticket   |
   +------------+
