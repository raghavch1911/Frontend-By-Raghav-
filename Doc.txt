1. In todays's digital world, managing ticket bookings manually can lead to long queues, delays, and operational inefficiencies. To solve this, your development team has been assigned to build a web-based E-ticketing system that simplifies the process of booking tickets for movies, concerts, and public events. [10Marks]

Based on this information, answer the following:
a. write a short summary (abstract) of what this project is about.
b. what are the main things the system should do? (Functional Requirments)
c. what are the qualities the system should have? (Non-Functional Requirments)
d. who all use the system? List all types of users.
e. what are the main parts (modules) of the system?
f. Draw a simple use case diagram showing how users interact with th system.

2. Clone the online ticketing system repo to your eclipse software from the URL below and execute the project by changing the required changes in POM.xml and make it a successful build. [20 Marks]

https://github.com/ssvkotamraju/E-ticketing

3. Working with the version control(GitHub, GitLab, etc.) [30 Marks]

you're working as a junior developer on a railway ticket booking portal. Add new features, collaborate with teammates (via simulated patches), along with basic commands like init, add, commit, reset, restore, clean up unused branches, merge, patch, apply, prune commands and push the project to your git hub.

4. Run the project with docker [30 Marks]
i. create a Dockerfile and build a Docker image named OTS to push it to DockerHUB.
ii. Run the image in a container and expose port 8080. check if the app runs at http://localhost:8080.

iii. create a docker-compose.yml file so the app can work with other services like a database in the future.






c. Non-Functional Requirements:

Usability: Easy-to-use, responsive interface accessible on desktop, tablet, and mobile.
Scalability: Can handle many simultaneous users during peak times.
Performance: Fast response times with minimal delays, even under heavy traffic.
Security: Secure payment processing and user authentication with protocols like SSL.
Availability: High availability with minimal downtime and communicated maintenance schedules.
Reliability: Consistent system performance, especially for payments and ticket generation.
Backup & Data Recovery: Regular data backups and disaster recovery plan in place.
Interoperability: Integrates with third-party services (e.g., payment gateways, email notifications).

d. Types of Users:

Customer (End User): Books tickets for events.
Event Organizer (Admin): Manages events, bookings, and refunds.
System Administrator: Manages infrastructure, user queries, and security.

e. Main Parts (Modules) of the System:

User Interface (UI): Front-end platform for interaction (website/app).
Event Management Module: Manages event details (dates, locations, seats).
Booking & Ticketing Module: Handles ticket booking and e-ticket generation.
Payment Gateway Integration: Manages secure payment processing.
User Account Management: Handles user registration, login, and booking history.
Notification System: Sends confirmations, reminders, and updates.
Admin Panel: Admins manage events, bookings, and refunds.
Security & Authentication: Ensures user authentication and data security.

f. Use Case Diagram

Below is a simplified version of how the different users interact with the system:

             +----------------------------+
             |   E-Ticketing System       |
             +----------------------------+
                  ^             ^
               ____|_____________|____
              /                       \
   +------------+                  +------------+
   |  Customer  |                  |   Admin    |
   +------------+                  +------------+
        |                               |
   +----------+                      +----------+
   |  Browse  |                      |  Manage  |
   |   Events |<------------------->|  Events  |
   +----------+                      +----------+
        |                               |
   +------------+                  +------------+
   |  Select    |                  |  View All  |
   |  Tickets   |<----------------->|  Bookings  |
   +------------+                  +------------+
        |                               |
   +------------+                  +------------+
   |   Pay for   |                  |  Process   |
   |  Tickets   |                  |  Refunds   |
   +------------+                  +------------+
        |
   +------------+
   | Generate   |
   | E-Ticket   |
   +------------+

